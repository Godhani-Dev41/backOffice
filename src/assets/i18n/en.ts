export const TranslationEn = {
  isLoading: "Is Loading...",
  filter: "Filter",
  comingSoon: "Coming Soon",
  tooltips: {
    notPlatformUser:
      "This feature is only available to platform users. If you would like to join, please add a Stripe payment method.",
  },
  dashboard: {
    notPlatformUser:
      "This organization is not using the Bond Sports platform. If you would like to join, please click the button below and add a Stripe payment method.",
    goToPaymentButton: "Go To Payment Settings",
  },
  table: {
    sortedAsc: "sorted ascending",
    sortedDesc: "sorted descending",
  },
  programs: {
    sectionTitle: "PROGRAMS",
    addButton: "ADD NEW PROGRAM",
    emptyViewTitle: "Add Your First Program",
    emptyViewDesc:
      "Adding your programs will enable management of your venue’s events, leagues, tournaments, and so much more...",
    modalTitle: "Choose Type of Program",
    modalContent: "What type of program would you like to add?",
    classes: {
      title: "CLASSES",
      subtitle: "Customize your class's basic info",
      sideInfoHeader: "CREATE NEW CLASS",
      sideInfo: "Class type will create the basic settings for your class events",
      successBtn: "I WANT TO CREATE A CLASS",
      successSubtitle: "You've successfully created a program template, What’s next?",
      formLogo: "CLASS LOGO & COVER",
      formLogoDesc:
        "Upload an image that will be used as the opening image for your class page, Image should be at least 350x230px and 1MB max size",
      formUploadDesc:
        "Upload an image that will be used as the opening image for your program page, Image should be at least 350x230px and 1MB max size",
      formSettings: "CLASS SETTINGS",
      formSettingsDesc: "These settings will consolidate all relevant class events",
      formDescTooltip:
        "Only include information not provided in the class short description.\n" +
        "You may want to write: what weeks games are played/not played,\n" +
        "how many times a week a team will play, season specific rules,\n" +
        "the location of post game drinks, and any other useful information.",
      successText: "Class Successfully Created",
    },
    camps: {
      title: "CAMPS",
      subtitle: "Customize your camp's basic info",
      sideInfoHeader: "CREATE NEW CAMP",
      sideInfo: "Class type will create the basic settings for your camp events",
      successBtn: "I WANT TO CREATE A CAMP",
      successSubtitle: "You've successfully created a program template, What’s next?",
      formLogo: "CAMP LOGO & COVER",
      formLogoDesc:
        "Upload an image that will be used as the opening image for your camp page, Image should be at least 350x230px and 1MB max size",
      formUploadDesc:
        "Upload an image that will be used as the opening image for your program page, Image should be at least 350x230px and 1MB max size",
      formSettings: "CAMP SETTINGS",
      formSettingsDesc: "These settings will consolidate all relevant camp events",
      formDescTooltip:
        "Only include information not provided in the camp short description.\n" +
        "You may want to write: what weeks games are played/not played,\n" +
        "how many times a week a team will play, season specific rules,\n" +
        "the location of post game drinks, and any other useful information.",
      successText: "Camp Successfully Created",
    },
    clinics: {
      title: "CLINICS",
      subtitle: "Customize your clinic's basic info",
      sideInfoHeader: "CREATE NEW CLINIC",
      sideInfo: "Class type will create the basic settings for your clinic events",
      successBtn: "I WANT TO CREATE A CLINIC",
      successSubtitle: "You've successfully created a program template, What’s next?",
      formLogo: "CLINIC LOGO & COVER",
      formLogoDesc:
        "Upload an image that will be used as the opening image for your clinic page, Image should be at least 350x230px and 1MB max size",
      formUploadDesc:
        "Upload an image that will be used as the opening image for your program page, Image should be at least 350x230px and 1MB max size",
      formSettings: "CLINIC SETTINGS",
      formSettingsDesc: "These settings will consolidate all relevant clinic events",
      formDescTooltip:
        "Only include information not provided in the clinic short description.\n" +
        "You may want to write: what weeks games are played/not played,\n" +
        "how many times a week a team will play, season specific rules,\n" +
        "the location of post game drinks, and any other useful information.",
      successText: "Clinic Successfully Created",
    },
    formName: "NAME",
    formDesc: "DESCRIPTION",
    formDescShort: "SHORT DESCRIPTION",
    formLocation: "LOCATION",
    formLocSearchHint: "Enter city, neighborhood, borough or full address.",
    formSportType: "SPORT TYPE",
    formAgeGender: "AGE & GENDER",
    formLevel: "LEVEL OF PLAY",
    createTemplateButton: "CREATE TEMPLATE",
    basicInfoHeader: "ABOUT",
  },
  errors: {
    somethingWentWrong: "Something went wrong",
    chargeCouldntBeCompleted: "This charge couldn't be completed",
    tryLater: "Please try later",
    approve: "Approve",
    refresh: "Try to refresh the page or",
  },
  daysOfWeek: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
  gender: {
    1: "Co-Ed",
    2: "Male",
    3: "Female",
  },
  sports: {
    1: "Softball",
    2: "Basketball",
    3: "Football",
    4: "Soccer",
    5: "Bowling",
    6: "Bocceball",
    7: "Cornhole",
    8: "Dodgeball",
    9: "Frisbee",
    10: "Hockey",
    11: "Kickball",
    12: "Lacrosse",
    13: "Pingpong",
    14: "Rugby",
    15: "Skeeball",
    16: "Tennis",
    17: "Volleyball",
    18: "Wiffleball",
    19: "Badminton",
    20: "Finess",
    21: "Golf",
    22: "Pilates",
    23: "Running",
    24: "Skiing",
    25: "Snowboarding",
    26: "Yoga",
    27: "Broomball",
    28: "Cricket",
    29: "Crossfit",
    30: "Cycling",
    31: "Field Hockey",
    32: "Racqetball",
    33: "Spinning",
    34: "Squash",
    35: "Surfing",
    36: "Swimming",
    37: "Wind Surfing",
    38: "Adventure",
    39: "Boxing",
    40: "Baseball",
    41: "Dance",
    42: "Kickboxing",
    43: "Martial Arts",
    44: "Outdoors",
    45: "Rowing",
    46: "Sailing",
    47: "Sup",
    48: "Triathlon",
    49: "Handball",
    50: "Catchball",
    51: "Blitzball",
    52: "Roller Derby",
    999: "Other",
  },

  /*
   * React translations
   * */
  payments: {
    payment: "Payment",
    methods: {
      cash: "Cash",
      card: "Credit Card",
      ach: "Bank Account",
      check: "Check",
      newAch: "Bank Account Details",
      newCard: "Credit Card Details",
    },
    totalPaid: "Total Paid",
    totalDue: "Total Due",
    howMuchToCharge: "How much to charge?",
    manualDiscount: "Manual Discount",
    cart: {
      cart: "Cart",
      clearCart: "Clear Cart",
    },
    whichPaymentMethod: "Which payment method?",
    back: "Back",
    subTitle: {
      chargingAmount: "Charging Amount",
      pricePerPayment: "Price per payment",
    },
    useExisiting: "Use existing",
    or: "or",
    switchCards: "Switch card",
    swipeCard: "Swipe card",
    enterManually: "Enter manually",
    purchaseCompleted: "Purchase Completed!",
    items: {
      subTotal: "Subtotal",
      taxRate: "Tax Rate",
      membershipDiscount: "Membership Discount",
    },
    searchByInvoice: "Search by Invoice no.",
    searchByPayment: "Search by Payment no.",
  },
  customers: {
    customer: "Customer",
    allCustomers: "Customers",
    addCustomer: "Add A Customer",
    listColumns: {
      id: "ID",
      lastName: "Last Name",
      firstName: "First Name",
      phoneNumber: "Phone No.",
      waiver: "Waiver",
      birthDate: "Age",
      balance: "Balance",
      entityType: "Type",
      status: "Status",
    },
    pagination: {
      showing: "Showing",
      to: "to",
      of: "of",
      clients: "clients",
    },
    customerHeader: {
      lastActivity: "Last Activity",
      editProfile: "EDIT PROFILE",
    },

    tabs: {
      overview: "Overview",
      membership: "Membership",
      payments: "Payments",
      invoices: "Invoices",
      refunds: "Refunds",
      reservation: "Reservation",
      activity: "Activity",
      food: "Food & Beverage",
      equipment: "Equipment",
    },
    customerPage: {
      gender: "GENDER",
      email: "Email",
      dateOfBirth: "Date Of Birth",
      age: "Age",
      address: "Address",
      city: "City",
      zip: "Zip Code",
    },
    familyPage: {
      viewProfile: "View Profile",
      familyBalance: "Family Balance",
      addFamilyMember: "Add Family Member",
    },
    tags: {
      individual: "Individual",
      user: "Individual",
      organization: "Organization",
      family: "Family",
      active: "Active",
      inactive: "InActive",
      expire: "Expire",
      pending: "Pending",
      paid: "Paid",
      not_paid: "Unpaid",
      partial: "Partially paid",
      charged: "Charged",
      refunded: "Refunded",
      future: "Unpaid",
      succeeded: "Paid",
      canceled: "Canceled",
      scheduled: "Scheduled Payments",
    },
    alternativeTags: {
      paid: "Charged",
      refunded: "Refunded",
    },
    paymentsInvoices: {
      invoice: "Invoice",
      invoiceNum: "Invoice no. ",
      receiptNum: "Receipt No.",
      issueRefund: "issue refund",
      printInvoice: "print Invoice",
      charge: "charge",
      chargeBalance: "Charge Balance",
      downloadInvoice: "Download invoice",
      sendInvoice: "Send Invoice",
      downloadAsPDF: "Download as PDF",
      schedulePayments: "Schedule payments",
      schedulePayment: "Schedule payment",
      paymentsSchedule: "payments Schedule",
      paymentRequest: "Payment request",
      addDiscount: "Add discount",
      billingInfo: "Billing Info",
      purchaseDate: "Purchase Date",
      amount: "Amount",
      totalRecieved: "Total Recieved",
      info: "Info",
      paymentInfo: "Payment Info",
      paymentMethod: "Payment Method",
      paymentDetails: "Payment Details",
      createdOn: "Created On",
      total: "Total",
      customerDetails: "Customer Details",
      purchasedItems: "Purchased Items",
      quantity: "Qty",
      tax: "Tax",
      method: "Method",
      recieptId: "Reciept ID",
      date: "Date",
      addReasonForDiscount: "Add reason for discount",
      apply: "Apply",
      remove: "Remove",
      discount: "Discount",
      chargeSchedulePayments:
        "Charge customer will cancel schedule payments action and all future schedule payment will be deleted",
      rescheduleWarning:
        "Click on ‘schedule payment’ will cancel schedule payments action and all future payments will be deleted",
    },
  },
  memberships: {
    selectPage: {
      title: "Create your first membership",
      button: "Create",
      view: "VIEW",
      edit: "Edit",
      cancel: "CANCEL",
      save: "Save",
      create: "CREATE MEMBERSHIP",
    },
    detailsPage: {
      title: "CREATE MEMBERSHIP",
      detailCardTitle: "MEMBERSHIP DETAILS",
      formsCardTitle: "Forms",
      name: "Membership Name",
      description: "Description",
      customerType: "Customer Type",
      activity: "Activity",
      facility: "Facility",
      forms: "Forms",
      numberOfPeople: "Number of people",
    },
    settingsPage: {
      settingCardTitle: "Membership Settings",
      ageRange: "Age",
      gender: "Gender",
      from: "From",
      to: "To",
      tagsLabel: "Tags",
      tagsDesc: "To separate between tags use commas or hit return. Hit backspace to remove.",
      tagsInfo: "",
    },
    pricingPage: {
      title: "Pricing",
      membershipPrice: "Membership Price",
    },
    typePage: {
      title: "Create Membership",
      typeTitle: "Membership Type",
      fixTitle: "Fixed Membership",
      rollingTitle: "Rolling Membership",
      dateTitle: "Dates",
      registrationDateTitle: "Registration Dates",
      startDate: "Start Date",
      endDate: "End Date",
      renewalTitle: "Renewal",
      renewalLabel: "Renewal Frequency",
    },

    dashboard: {
      title: "Membership",
      details: "Details",
      members: "Members",
      customerType: "Customer Type",
      numberOfPeople: "Number of people",
      facility: "Facility",
      membershipType: "Membership Type",
      date: "Dates",
      registrationDate: "Registration Dates",
      price: "Price",
      forms: "Forms",
      addsOnsList: "Adds Ons List",
      age: "Age",
      maxMembers: "Max Members",
      gender: "Gender",
      activity: "Activity",
      memberTypeFixed: "Fixed",
      memberTypeRolling: "Rolling",
      viewButton: "View",
      editButton: "Edit",
      noForms: {
        main: "It seems that no forms have been uploaded for this membership yet",
        secondary: "Add forms from the edit button",
      },
      noAddsOns: {
        main: "It seems that no Add Ons have been uploaded for this membership yet",
        secondary: "Add Add Ons from the edit button",
      },
      customerTypes: {
        individual: "Individual",
        user: "Individual",
        organization: "Organization",
        family: "Family",
      },
    },
    footer: {
      defaultNext: "Next",
      defaultCancel: "Cancel",
      createMembership: "Create",
      updateMembership: "Update",
    },
  },
  currency: {
    USD: {
      symbol: "$",
    },
  },
};
